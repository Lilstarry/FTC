<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_robot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Controls
m_up = vk_up
m_left = vk_left
m_right = vk_right
m_down = vk_down

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Physics
m_maxSpd = 3
m_turnSpd = 1
m_acceleration = 0.2

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement

var up = keyboard_check(m_up)
var down = keyboard_check(m_down)

if(up)
{
    if(phy_speed_x &gt; m_maxSpd)
        phy_speed_x = m_maxSpd
    else
        phy_speed_x += lengthdir_x(m_acceleration, -phy_rotation)
        
    if(phy_speed_x &gt; m_maxSpd)
        phy_speed_x = m_maxSpd
    else 
        phy_speed_y += lengthdir_y(m_acceleration, -phy_rotation)
}
else if(down)
{
    if(phy_speed_x &gt; m_maxSpd)
        phy_speed_x = m_maxSpd
    else
        phy_speed_x += lengthdir_x(-m_acceleration, -phy_rotation)
        
    if(phy_speed_x &gt; m_maxSpd)
        phy_speed_x = m_maxSpd
    else 
        phy_speed_y += lengthdir_y(-m_acceleration, -phy_rotation)
}
/**/
else
{
    phy_speed_x = 0
    phy_speed_y = 0
}
/**/
if(keyboard_check(m_right))
{
    phy_rotation += m_turnSpd
}
else if(keyboard_check(m_left))
{
    phy_rotation -= m_turnSpd
}

image_angle = direction

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>15</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>10</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>10</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>90,90</point>
    <point>0,90</point>
    <point>0,0</point>
    <point>90,0</point>
  </PhysicsShapePoints>
</object>
